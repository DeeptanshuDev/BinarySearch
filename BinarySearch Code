Binary Search 

Time Complexity = O(logn)


#include<iostream>
using namespace std;

int binarySearch(int arr[], int size, int key) {
	int start = 0;
	int end = size-1;
	//int mid = (start + end)/2;
	//if the start is INT_MIN and end is INT_MAX and then if we add them then mid range 
	//will be out in INT range so we can update the mid calculaation using below expression
	int mid = start + (end-start)/2;
	
	while(start <= end){
		
		if(arr[mid] == key){
			return mid;
		}
		if(arr[mid]<key){
			start = mid+1;
			
		} else{
			end = mid-1;
		}
		//mid = (start + end)/2;
		mid = (start + end)/2;
	}
	return -1;
}

int main(){
	int even[6] = {2, 5, 6, 8,9, 10};
	int odd[5] = {1,2,3,4,5};
	
	int search = binarySearch(even, 6, 10);
	cout<<"9 is present on "<<search<<" index of event array"<<endl;
	
	search = binarySearch(odd, 5, 4);
	cout<<"1 is present on "<<search<<" index of odd array"<<endl;
	
	
}
